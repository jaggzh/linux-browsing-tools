#!/bin/bash

# Default number of files to display
num_files=3
prev_lines=8

# Function to display help
function display_help {
	echo "Usage: dirbrief [-n num_files] [-h] [directory]"
	echo
	echo "Options:"
	echo " -h              Display this help message."
	echo " -n num_files    Set the maximum number of files to display in each directory."
	echo " -p prev_lines   Max number of lines to display of files in preview."
	echo " directory       The directory to start in. Defaults to the current directory."
	exit 0
}

# Parse command line options
while getopts "hn:p:" opt; do
	case ${opt} in
		h )  display_help ;;
		n )  num_files="$OPTARG" ;;
		p )  prev_lines="$OPTARG" ;;
		\? ) echo "Invalid option: $OPTARG" 1>&2; exit 1 ;;
		: )  echo "Invalid option: $OPTARG requires an argument" 1>&2
		     exit 1 ;;
	esac
done
shift $((OPTIND -1))
num_files="${num_files//[!0-9]/}"
prev_lines="${prev_lines//[!0-9]/}"

# The directory to start in
dir=${1:-.}
base_depth=$(tr -dc '/' <<< "$dir" | awk '{ print length }')

# Preview command
preview_cmd="if [[ -d {2..} ]]; then echo \"DIRECTORY: {2..}\"; ls -lgGh --color=always -- {2..} | tail -n +2; else head -n '$prev_lines' '{1}'; fi"
bcya=$'\033[36;1m'
yel=$'\033[33;1m'
rst=$'\033[;m'
# Generate the directory tree and feed it into fzf
find "$dir" -type d -print0 | while IFS= read -r -d '' dir; do
	total_files=$(find "$dir" -maxdepth 1 -type f | wc -l)
	depth=$(tr -dc '/' <<< "$dir" | awk '{ print length }')
	indent=$(printf '%*s' $((2 * (depth - base_depth - 1))))
	printf "%-4d $bcya%s%s$rst\0" "$total_files" "$indent" "$dir"
	find "$dir" -maxdepth 1 -type f | head -n "$num_files" | while IFS= read -r file; do
		printf "      $indent$yel%s$rst\0" "$file"
	done
done | fzf --tabstop 3 \
           --preview "$preview_cmd" \
           --preview-window "up,$prev_lines" \
           --read0 \
           --ansi \
           --scroll-off 2 \
           --layout reverse-list
